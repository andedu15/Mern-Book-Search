[{"C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\index.js":"1","C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\App.js":"2","C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\pages\\SavedBooks.js":"3","C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\pages\\SearchBooks.js":"4","C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\components\\Navbar.js":"5","C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\components\\SignupForm.js":"6","C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\components\\LoginForm.js":"7","C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\utils\\queries.js":"8","C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\utils\\localStorage.js":"9","C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\utils\\auth.js":"10","C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\utils\\mutations.js":"11","C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\utils\\API.js":"12"},{"size":269,"mtime":1674346410000,"results":"13","hashOfConfig":"14"},{"size":1211,"mtime":1674346410000,"results":"15","hashOfConfig":"14"},{"size":3269,"mtime":1674346410000,"results":"16","hashOfConfig":"14"},{"size":5819,"mtime":1674346410000,"results":"17","hashOfConfig":"14"},{"size":2524,"mtime":1674346410000,"results":"18","hashOfConfig":"14"},{"size":3171,"mtime":1674346410000,"results":"19","hashOfConfig":"14"},{"size":2430,"mtime":1674346410000,"results":"20","hashOfConfig":"14"},{"size":264,"mtime":1674346410000,"results":"21","hashOfConfig":"14"},{"size":801,"mtime":1674346410000,"results":"22","hashOfConfig":"14"},{"size":1437,"mtime":1674346410000,"results":"23","hashOfConfig":"14"},{"size":1079,"mtime":1674346410000,"results":"24","hashOfConfig":"14"},{"size":1392,"mtime":1674346410000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xrqajv",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\index.js",[],[],"C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\App.js",[],[],"C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\pages\\SavedBooks.js",[],[],"C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\pages\\SearchBooks.js",["63"],[],"import React, { useState, useEffect } from 'react';\nimport {\n  Jumbotron,\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\n\nimport { useMutation } from '@apollo/client';\nimport { SAVE_BOOK } from '../utils/mutations';\n\nimport { GET_ME } from '../utils/queries';\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  const [saveBook, { error }] = useMutation(SAVE_BOOK, {\n    // The below block ensures that as soon as the user saves a book, it appears right away in the saved books page\n    update(cache, { data: { saveBook } }) {\n      try {\n        const { me } = cache.readQuery({\n          query: GET_ME,\n        });\n\n        cache.writeQuery({\n          query: GET_ME,\n          data: {\n            me: {\n              ...me,\n              savedBooks: [\n                ...me.savedBooks,\n                saveBook.savedBooks[saveBook.savedBooks.length - 1],\n              ],\n            },\n          },\n        });\n      } catch (e) {}\n    },\n  });\n\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        link: book.volumeInfo.previewLink,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get tokens\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n\n    try {\n      await saveBook({\n        variables: { bookToSave },\n      });\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n      saveBookIds(savedBookIds);\n    } catch (err) {\n      // console.log(error.networkError.result.errors);\n\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name=\"searchInput\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  size=\"lg\"\n                  placeholder=\"Search for a book\"\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some(\n                        (savedBookId) => savedBookId === book.bookId\n                      )}\n                      className=\"btn-block btn-info\"\n                      onClick={() => handleSaveBook(book.bookId)}\n                    >\n                      {savedBookIds?.some(\n                        (savedBookId) => savedBookId === book.bookId\n                      )\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                  <a\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                    id=\"link\"\n                    href={book.link}\n                  >\n                    {book.link == null ? 'No link available' : 'Link to google'}\n                  </a>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\components\\Navbar.js",[],[],"C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\components\\SignupForm.js",[],[],"C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\components\\LoginForm.js",[],[],"C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\utils\\queries.js",[],[],"C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\utils\\localStorage.js",[],[],"C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\utils\\auth.js",[],[],"C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\utils\\mutations.js",[],[],"C:\\Users\\anded\\OneDrive\\Escritorio\\Bootcamp\\Challenges\\Book-Search-Engine\\client\\src\\utils\\API.js",[],[],{"ruleId":"64","severity":1,"message":"65","line":30,"column":22,"nodeType":"66","messageId":"67","endLine":30,"endColumn":27},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar"]